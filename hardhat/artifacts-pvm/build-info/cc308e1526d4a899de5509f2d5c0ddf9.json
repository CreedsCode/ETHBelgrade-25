{"id":"cc308e1526d4a899de5509f2d5c0ddf9","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"contracts/Storage.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\ncontract Storage {\n    // State variable to store our number\n    uint256 private number;\n\n    // Event to notify when the number changes\n    event NumberChanged(uint256 newNumber);\n\n    // Function to store a new number\n    function store(uint256 newNumber) public {\n        number = newNumber;\n        emit NumberChanged(newNumber);\n    }\n\n    // Function to retrieve the stored number\n    function retrieve() public view returns (uint256) {\n        return number;\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"parameters":"z"},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[],"version":"0.8.28","long_version":"0.8.28+commit.7893614a.Emscripten.clang","revive_version":"0.1.0-dev.16+commit.0421869.llvm-18.1.8","sources":{"contracts/Storage.sol":{"id":0,"ast":{"absolutePath":"contracts/Storage.sol","exportedSymbols":{"Storage":[30]},"id":31,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"Storage","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":30,"linearizedBaseContracts":[30],"name":"Storage","nameLocation":"67:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3,"mutability":"mutable","name":"number","nameLocation":"139:6:0","nodeType":"VariableDeclaration","scope":30,"src":"123:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2,"name":"uint256","nodeType":"ElementaryTypeName","src":"123:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"anonymous":false,"eventSelector":"2fd81fd19d3c5c4b396dd13f451dafc8bcac1b3094c49c5fa90e68456323f0e3","id":7,"name":"NumberChanged","nameLocation":"205:13:0","nodeType":"EventDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"indexed":false,"mutability":"mutable","name":"newNumber","nameLocation":"227:9:0","nodeType":"VariableDeclaration","scope":7,"src":"219:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4,"name":"uint256","nodeType":"ElementaryTypeName","src":"219:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"218:19:0"},"src":"199:39:0"},{"body":{"id":20,"nodeType":"Block","src":"323:74:0","statements":[{"expression":{"id":14,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"333:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":13,"name":"newNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"342:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"333:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15,"nodeType":"ExpressionStatement","src":"333:18:0"},{"eventCall":{"arguments":[{"id":17,"name":"newNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"380:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":16,"name":"NumberChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"366:13:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":18,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"366:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":19,"nodeType":"EmitStatement","src":"361:29:0"}]},"functionSelector":"6057361d","id":21,"implemented":true,"kind":"function","modifiers":[],"name":"store","nameLocation":"291:5:0","nodeType":"FunctionDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"mutability":"mutable","name":"newNumber","nameLocation":"305:9:0","nodeType":"VariableDeclaration","scope":21,"src":"297:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"297:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"296:19:0"},"returnParameters":{"id":11,"nodeType":"ParameterList","parameters":[],"src":"323:0:0"},"scope":30,"src":"282:115:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":28,"nodeType":"Block","src":"499:30:0","statements":[{"expression":{"id":26,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"516:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":25,"id":27,"nodeType":"Return","src":"509:13:0"}]},"functionSelector":"2e64cec1","id":29,"implemented":true,"kind":"function","modifiers":[],"name":"retrieve","nameLocation":"458:8:0","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"466:2:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29,"src":"490:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"490:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"489:9:0"},"scope":30,"src":"449:80:0","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":31,"src":"58:473:0","usedErrors":[],"usedEvents":[7]}],"src":"32:499:0"}}},"contracts":{"contracts/Storage.sol":{"Storage":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newNumber","type":"uint256"}],"name":"NumberChanged","type":"event"},{"inputs":[],"name":"retrieve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newNumber","type":"uint256"}],"name":"store","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"revive_pallet_version":null,"revive_version":"0.1.0-dev.16+commit.0421869.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNumber\",\"type\":\"uint256\"}],\"name\":\"NumberChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"retrieve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newNumber\",\"type\":\"uint256\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Storage.sol\":\"Storage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Storage.sol\":{\"keccak256\":\"0xe739804fd21edcacf42a06447cb4ab5d760015048fc0586900035e0d9f8a4412\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b743964a2d1dab4a28c87a1b906b62cb94d2da061a6622a2c597e878f1717b3b\",\"dweb:/ipfs/QmUsK6naFRndeQWknorNJ6dpeADvmttSNWh81nZ1Mqejyr\"]}},\"version\":1}","solc_version":"0.8.28+commit.7893614a.Emscripten.clang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 32/65616 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 622\n// Code size = 1879 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x20028]\n     5: jump @23 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x30050\n    14: i32 a0 = a0 + 0\n    16: ecalli 6 // 'set_immutable_data'\n    18: jump @23\n      : @2 [@dyn 1] (gas: 100)\n    21: a1 = u8 [a0 + 0x1]\n    24: a2 = u8 [a0]\n    26: a3 = u8 [a0 + 0x2]\n    29: a4 = u8 [a0 + 0x3]\n    32: a1 = a1 << 0x8\n    35: a1 = a1 | a2\n    38: a3 = a3 << 0x10\n    41: a4 = a4 << 0x18\n    44: a3 = a3 | a4\n    47: a1 = a1 | a3\n    50: a2 = u8 [a0 + 0x5]\n    53: a3 = u8 [a0 + 0x4]\n    56: a4 = u8 [a0 + 0x6]\n    59: a5 = u8 [a0 + 0x7]\n    62: a2 = a2 << 0x8\n    65: a2 = a2 | a3\n    68: a4 = a4 << 0x10\n    71: a5 = a5 << 0x18\n    74: a4 = a4 | a5\n    77: a2 = a2 | a4\n    80: a2 = a2 << 0x20\n    83: t0 = a2 | a1\n    86: a2 = u8 [a0 + 0x9]\n    89: a3 = u8 [a0 + 0x8]\n    92: a4 = u8 [a0 + 0xa]\n    95: a5 = u8 [a0 + 0xb]\n    98: a2 = a2 << 0x8\n   101: a2 = a2 | a3\n   104: a4 = a4 << 0x10\n   107: a5 = a5 << 0x18\n   110: a4 = a4 | a5\n   113: a2 = a2 | a4\n   116: a3 = u8 [a0 + 0xd]\n   119: a4 = u8 [a0 + 0xc]\n   122: a5 = u8 [a0 + 0xe]\n   125: a1 = u8 [a0 + 0xf]\n   128: a3 = a3 << 0x8\n   131: a3 = a3 | a4\n   134: a5 = a5 << 0x10\n   137: a1 = a1 << 0x18\n   140: a1 = a1 | a5\n   143: a1 = a1 | a3\n   146: a1 = a1 << 0x20\n   149: t1 = a1 | a2\n   152: a1 = u8 [a0 + 0x11]\n   155: a3 = u8 [a0 + 0x10]\n   158: a4 = u8 [a0 + 0x12]\n   161: a5 = u8 [a0 + 0x13]\n   164: a1 = a1 << 0x8\n   167: a1 = a1 | a3\n   170: a4 = a4 << 0x10\n   173: a5 = a5 << 0x18\n   176: a4 = a4 | a5\n   179: a1 = a1 | a4\n   182: a3 = u8 [a0 + 0x15]\n   185: a4 = u8 [a0 + 0x14]\n   188: a5 = u8 [a0 + 0x16]\n   191: a2 = u8 [a0 + 0x17]\n   194: a3 = a3 << 0x8\n   197: a3 = a3 | a4\n   200: a5 = a5 << 0x10\n   203: a2 = a2 << 0x18\n   206: a2 = a2 | a5\n   209: a2 = a2 | a3\n   212: a2 = a2 << 0x20\n   215: a3 = a2 | a1\n   218: a1 = u8 [a0 + 0x19]\n   221: a2 = u8 [a0 + 0x18]\n   224: a4 = u8 [a0 + 0x1a]\n   227: a5 = u8 [a0 + 0x1b]\n   230: a1 = a1 << 0x8\n   233: a1 = a1 | a2\n   236: a4 = a4 << 0x10\n   239: a5 = a5 << 0x18\n   242: a4 = a4 | a5\n   245: a1 = a1 | a4\n   248: a2 = u8 [a0 + 0x1d]\n   251: a4 = u8 [a0 + 0x1c]\n   254: a5 = u8 [a0 + 0x1e]\n   257: a0 = u8 [a0 + 0x1f]\n   260: a2 = a2 << 0x8\n   263: a2 = a2 | a4\n   266: a5 = a5 << 0x10\n   269: a0 = a0 << 0x18\n   272: a0 = a0 | a5\n   275: a0 = a0 | a2\n   278: a0 = a0 << 0x20\n   281: a0 = a0 | a1\n   284: a0 = reverse a0\n   286: a1 = reverse a3\n   288: a2 = reverse t1\n   290: a3 = reverse t0\n   292: u64 [s0 + 0x18] = a3\n   295: u64 [s0 + 0x10] = a2\n   298: u64 [s0 + 0x8] = a1\n   301: u64 [s0] = a0\n   303: ra = u64 [sp + 0x8]\n   306: s0 = u64 [sp]\n   308: sp = sp + 0x10\n   311: ret\n      : @3 (gas: 12)\n   313: sp = sp + 0xffffffffffffffd8\n   316: u64 [sp + 0x20] = ra\n   319: u64 [sp + 0x18] = s0\n   322: u64 [sp + 0x10] = s1\n   325: a2 = u64 [a1]\n   327: u64 [sp + 0x8] = a2\n   330: a2 = u64 [a1 + 0x8]\n   333: u64 [sp] = a2\n   335: s0 = u64 [a1 + 0x10]\n   338: s1 = u64 [a1 + 0x18]\n   341: a1 = 0x20\n   344: ra = 4, jump @6\n      : @4 [@dyn 2] (gas: 71)\n   349: a1 = reverse s1\n   351: a2 = reverse s0\n   353: a3 = u64 [sp]\n   355: a3 = reverse a3\n   357: a4 = u64 [sp + 0x8]\n   360: a4 = reverse a4\n   362: u8 [a0 + 0x18] = a4\n   365: u8 [a0 + 0x10] = a3\n   368: u8 [a0 + 0x8] = a2\n   371: u8 [a0] = a1\n   373: a5 = a4 >> 0x38\n   376: u8 [a0 + 0x1f] = a5\n   379: a5 = a4 >> 0x30\n   382: u8 [a0 + 0x1e] = a5\n   385: a5 = a4 >> 0x28\n   388: u8 [a0 + 0x1d] = a5\n   391: a5 = a4 >> 0x20\n   394: u8 [a0 + 0x1c] = a5\n   397: a5 = a4 >> 0x18\n   400: u8 [a0 + 0x1b] = a5\n   403: a5 = a4 >> 0x10\n   406: u8 [a0 + 0x1a] = a5\n   409: a4 = a4 >> 0x8\n   412: u8 [a0 + 0x19] = a4\n   415: a4 = a3 >> 0x38\n   418: u8 [a0 + 0x17] = a4\n   421: a4 = a3 >> 0x30\n   424: u8 [a0 + 0x16] = a4\n   427: a4 = a3 >> 0x28\n   430: u8 [a0 + 0x15] = a4\n   433: a4 = a3 >> 0x20\n   436: u8 [a0 + 0x14] = a4\n   439: a4 = a3 >> 0x18\n   442: u8 [a0 + 0x13] = a4\n   445: a4 = a3 >> 0x10\n   448: u8 [a0 + 0x12] = a4\n   451: a3 = a3 >> 0x8\n   454: u8 [a0 + 0x11] = a3\n   457: a3 = a2 >> 0x38\n   460: u8 [a0 + 0xf] = a3\n   463: a3 = a2 >> 0x30\n   466: u8 [a0 + 0xe] = a3\n   469: a3 = a2 >> 0x28\n   472: u8 [a0 + 0xd] = a3\n   475: a3 = a2 >> 0x20\n   478: u8 [a0 + 0xc] = a3\n   481: a3 = a2 >> 0x18\n   484: u8 [a0 + 0xb] = a3\n   487: a3 = a2 >> 0x10\n   490: u8 [a0 + 0xa] = a3\n   493: a2 = a2 >> 0x8\n   496: u8 [a0 + 0x9] = a2\n   499: a2 = a1 >> 0x38\n   502: u8 [a0 + 0x7] = a2\n   505: a2 = a1 >> 0x30\n   508: u8 [a0 + 0x6] = a2\n   511: a2 = a1 >> 0x28\n   514: u8 [a0 + 0x5] = a2\n   517: a2 = a1 >> 0x20\n   520: u8 [a0 + 0x4] = a2\n   523: a2 = a1 >> 0x18\n   526: u8 [a0 + 0x3] = a2\n   529: a2 = a1 >> 0x10\n   532: u8 [a0 + 0x2] = a2\n   535: a1 = a1 >> 0x8\n   538: u8 [a0 + 0x1] = a1\n   541: ra = u64 [sp + 0x20]\n   544: s0 = u64 [sp + 0x18]\n   547: s1 = u64 [sp + 0x10]\n   550: sp = sp + 0x28\n   553: ret\n      : @5 [@dyn 3] (gas: 23)\n   555: a1 = u64 [sp]\n   557: a1 = reverse a1\n   559: a2 = u64 [sp + 0x8]\n   562: a2 = reverse a2\n   564: a3 = u64 [sp + 0x10]\n   567: a3 = reverse a3\n   569: a4 = u64 [sp + 0x18]\n   572: a4 = reverse a4\n   574: u64 [sp + 0x38] = a4\n   577: u64 [sp + 0x30] = a3\n   580: u64 [sp + 0x28] = a2\n   583: u64 [sp + 0x20] = a1\n   586: i32 a2 = a0 + 0\n   588: i32 a3 = s1 + 0\n   590: i32 a0 = sp + 0x20\n   593: a1 = 0x1\n   596: ecalli 3 // 'deposit_event'\n   598: sp = s0 + 0xffffffffffffffa0\n   601: ra = u64 [sp + 0x58]\n   604: s0 = u64 [sp + 0x50]\n   607: s1 = u64 [sp + 0x48]\n   610: sp = sp + 0x60\n   613: ret\n      : @6 (gas: 2)\n   615: i32 a2 = a0 >> 0x10\n   618: jump @11 if a2 != 0\n      : @7 (gas: 4)\n   621: a1 = a1 + a0\n   624: i32 a1 = a1 + 0x1f\n   627: a1 = a1 & 0xffffffffffffffe0\n   630: jump @11 if a1 >u 65536\n      : @8 (gas: 3)\n   636: a2 = 0x20024\n   641: a3 = i32 [0x20024]\n   646: jump @10 if a3 >=u a1\n      : @9 (gas: 2)\n   649: u32 [0x20024] = a1\n   654: fallthrough\n      : @10 (gas: 4)\n   655: a1 = 0x20030\n   660: i32 a0 = a0 + 0\n   662: a0 = a0 + a1\n   665: ret\n      : @11 (gas: 1)\n   667: trap\n      : @12 (gas: 6)\n   668: sp = sp + 0xfffffffffffffff0\n   671: u64 [sp + 0x8] = ra\n   674: u64 [sp] = s0\n   676: s0 = a0 & 0x1\n   679: ecalli 2 // 'call_data_size'\n   681: fallthrough\n      : @13 (gas: 2)\n   682: u32 [0x20020] = a0\n   687: jump @15 if s0 == 0\n      : @14 (gas: 1)\n   690: ra = 8, jump @16\n      : @15 [@dyn 4] (gas: 1)\n   694: ra = 10, jump @25\n      : @16 [@dyn 5] (gas: 12)\n   699: sp = sp + 0xffffffffffffffa0\n   702: u64 [sp + 0x58] = ra\n   705: u64 [sp + 0x50] = s0\n   708: s0 = sp + 0x60\n   711: sp = sp & 0xffffffffffffffe0\n   714: u64 [sp + 24] = 0\n   717: u64 [sp + 16] = 0\n   720: u64 [sp + 0] = 0x80\n   724: a0 = 0x40\n   727: a1 = sp\n   729: u64 [sp + 8] = 0\n   732: ra = 12, jump @3\n      : @17 [@dyn 6] (gas: 7)\n   737: u64 [sp + 56] = 0\n   740: u64 [sp + 48] = 0\n   743: u64 [sp + 40] = 0\n   746: u64 [sp + 32] = 0\n   749: i32 a0 = sp + 0x20\n   752: ecalli 8 // 'value_transferred'\n   754: fallthrough\n      : @18 (gas: 8)\n   755: a0 = u64 [sp + 0x30]\n   758: a1 = u64 [sp + 0x38]\n   761: a2 = u64 [sp + 0x28]\n   764: a3 = u64 [sp + 0x20]\n   767: a1 = a1 | a2\n   770: a0 = a0 | a3\n   773: a0 = a0 | a1\n   776: jump @20 if a0 == 0\n      : @19 (gas: 7)\n   779: a1 = 0x20030\n   784: i32 a1 = a1 + 0\n   786: a0 = 0x1\n   789: a2 = 0\n   791: ra = 0x10\n   794: ecalli 5 // 'seal_return'\n   796: jump @25\n      : @20 (gas: 2)\n   798: a1 = i32 [0x20024]\n   803: jump @22 if a1 >u 127\n      : @21 (gas: 2)\n   807: u32 [0x20024] = 0x80\n   814: fallthrough\n      : @22 (gas: 6)\n   815: a0 = 0x20030\n   820: i32 a0 = a0 + 0x80\n   824: a1 = 0\n   826: a2 = 0\n   828: ecalli 0 // 'call_data_copy'\n   829: jump @0\n      : @23 (gas: 3)\n   832: a0 = 0x80\n   836: a1 = 0\n   838: ra = 14, jump @6\n      : @24 [@dyn 7] (gas: 6)\n   843: i32 a1 = a0 + 0\n   845: a0 = 0\n   847: a2 = 0\n   849: ra = 0x10\n   852: ecalli 5 // 'seal_return'\n   854: fallthrough\n      : @25 [@dyn 8] (gas: 14)\n   855: sp = sp + 0xfffffffffffffe20\n   859: u64 [sp + 0x1d8] = ra\n   863: u64 [sp + 0x1d0] = s0\n   867: u64 [sp + 0x1c8] = s1\n   871: s0 = sp + 0x1e0\n   875: sp = sp & 0xffffffffffffffe0\n   878: s1 = sp\n   880: u64 [s1 + 248] = 0\n   884: u64 [s1 + 240] = 0\n   888: u64 [s1 + 224] = 0x80\n   894: a0 = 0x40\n   897: a1 = s1 + 0xe0\n   901: u64 [s1 + 232] = 0\n   905: ra = 18, jump @3\n      : @26 [@dyn 9] (gas: 4)\n   910: a0 = 0x20020\n   915: u64 [s1 + 0x38] = a0\n   918: a0 = i32 [0x20020]\n   923: jump @40 if a0 <u 4\n      : @27 (gas: 4)\n   928: i32 a0 = s1 + 0x100\n   932: a1 = 0\n   934: ecalli 1 // 'call_data_load'\n   936: fallthrough\n      : @28 (gas: 2)\n   937: a0 = i32 [s1 + 0x11c]\n   941: jump @36 if a0 != 1616328221\n      : @29 (gas: 7)\n   949: u64 [s1 + 376] = 0\n   953: u64 [s1 + 368] = 0\n   957: u64 [s1 + 360] = 0\n   961: u64 [s1 + 352] = 0\n   965: i32 a0 = s1 + 0x160\n   969: ecalli 8 // 'value_transferred'\n   971: fallthrough\n      : @30 (gas: 9)\n   972: a4 = s1 + 0x100\n   976: a0 = u64 [a4 + 0x70]\n   979: a1 = u64 [a4 + 0x78]\n   982: a2 = u64 [a4 + 0x68]\n   985: a3 = u64 [a4 + 0x60]\n   988: a1 = a1 | a2\n   991: a0 = a0 | a3\n   994: a0 = a0 | a1\n   997: jump @41 if a0 != 0\n      : @31 (gas: 3)\n  1001: a0 = u64 [s1 + 0x38]\n  1004: a0 = i32 [a0]\n  1006: jump @42 if a0 <=u 35\n      : @32 (gas: 68)\n  1011: a0 = sp + 0xffffffffffffffe0\n  1014: a0 = a0 & 0xffffffffffffffe0\n  1017: u64 [s1 + 0x38] = a0\n  1020: sp = a0\n  1022: i32 a0 = s1 + 0x180\n  1026: a1 = 0x4\n  1029: ecalli 1 // 'call_data_load'\n  1031: a4 = s1 + 0x100\n  1035: a0 = u64 [a4 + 0x98]\n  1039: a1 = u64 [a4 + 0x90]\n  1043: a2 = u64 [a4 + 0x88]\n  1047: a3 = u64 [a4 + 0x80]\n  1051: u64 [s1 + 0x30] = a0\n  1054: a4 = u64 [s1 + 0x38]\n  1057: u64 [a4 + 0x18] = a0\n  1060: u64 [s1 + 0x28] = a1\n  1063: u64 [a4 + 0x10] = a1\n  1066: u64 [s1 + 0x20] = a2\n  1069: u64 [a4 + 0x8] = a2\n  1072: u64 [s1 + 0x18] = a3\n  1075: u64 [a4] = a3\n  1077: a1 = a4\n  1079: u64 [s1 + 440] = 0\n  1083: u64 [s1 + 432] = 0\n  1087: u64 [s1 + 424] = 0\n  1091: u64 [s1 + 416] = 0\n  1095: a0 = s1 + 0x1a0\n  1099: ra = 0x14\n  1102: sp = sp + 0xffffffffffffffa0\n  1105: u64 [sp + 0x58] = ra\n  1108: u64 [sp + 0x50] = s0\n  1111: s0 = sp + 0x60\n  1114: sp = sp & 0xffffffffffffffe0\n  1117: t0 = u64 [a0]\n  1119: a3 = u64 [a0 + 0x8]\n  1122: a4 = u64 [a0 + 0x10]\n  1125: a0 = u64 [a0 + 0x18]\n  1128: t1 = u64 [a1]\n  1130: a2 = u64 [a1 + 0x8]\n  1133: a5 = u64 [a1 + 0x10]\n  1136: a1 = u64 [a1 + 0x18]\n  1139: t2 = reverse a0\n  1141: a4 = reverse a4\n  1143: a3 = reverse a3\n  1145: a0 = reverse t0\n  1147: t0 = reverse a1\n  1149: a5 = reverse a5\n  1151: a2 = reverse a2\n  1153: a1 = reverse t1\n  1155: u64 [sp + 0x18] = a0\n  1158: u64 [sp + 0x10] = a3\n  1161: u64 [sp + 0x8] = a4\n  1164: u64 [sp] = t2\n  1166: u64 [sp + 0x38] = a1\n  1169: u64 [sp + 0x30] = a2\n  1172: u64 [sp + 0x28] = a5\n  1175: u64 [sp + 0x20] = t0\n  1178: i32 a1 = sp + 0\n  1180: i32 a3 = sp + 0x20\n  1183: a2 = 0xffffffffffffffff\n  1186: a4 = 0x20\n  1189: a0 = 0\n  1191: ecalli 7 // 'set_storage'\n  1193: sp = s0 + 0xffffffffffffffa0\n  1196: ra = u64 [sp + 0x58]\n  1199: s0 = u64 [sp + 0x50]\n  1202: sp = sp + 0x60\n  1205: ret\n      : @33 [@dyn 10] (gas: 12)\n  1207: a0 = s1 + 0xc0\n  1211: a1 = 0x40\n  1214: ra = 0x16\n  1217: sp = sp + 0xfffffffffffffff0\n  1220: u64 [sp + 0x8] = ra\n  1223: u64 [sp] = s0\n  1225: a2 = a1\n  1227: s0 = a0\n  1229: a1 = 0x20\n  1232: a0 = a2\n  1234: ra = 0x2\n  1237: jump @6\n      : @34 [@dyn 11] (gas: 12)\n  1240: a0 = u64 [s1 + 0xd8]\n  1244: a1 = u64 [s1 + 0xd0]\n  1248: a2 = u64 [s1 + 0xc8]\n  1252: a3 = u64 [s1 + 0xc0]\n  1256: a0 = a0 | a2\n  1259: a2 = a3 | a1\n  1262: a2 = a2 | a0\n  1265: a2 = a2 >> 0x20\n  1268: a0 = a0 | a1\n  1271: a0 = a0 << 0x20\n  1274: a0 = a0 | a2\n  1277: jump @43 if a0 == 0\n      : @35 (gas: 1)\n  1281: trap\n      : @36 (gas: 1)\n  1282: jump @40 if a0 != 778358465\n      : @37 (gas: 7)\n  1289: u64 [s1 + 312] = 0\n  1293: u64 [s1 + 304] = 0\n  1297: u64 [s1 + 296] = 0\n  1301: u64 [s1 + 288] = 0\n  1305: i32 a0 = s1 + 0x120\n  1309: ecalli 8 // 'value_transferred'\n  1311: fallthrough\n      : @38 (gas: 9)\n  1312: a4 = s1 + 0x100\n  1316: a0 = u64 [a4 + 0x30]\n  1319: a1 = u64 [a4 + 0x38]\n  1322: a2 = u64 [a4 + 0x28]\n  1325: a3 = u64 [a4 + 0x20]\n  1328: a1 = a1 | a2\n  1331: a0 = a0 | a3\n  1334: a0 = a0 | a1\n  1337: jump @46 if a0 == 0\n      : @39 (gas: 6)\n  1341: a1 = 0x20030\n  1346: i32 a1 = a1 + 0\n  1348: a0 = 0x1\n  1351: a2 = 0\n  1353: ecalli 5 // 'seal_return'\n  1355: jump @46\n      : @40 (gas: 6)\n  1358: a1 = 0x20030\n  1363: i32 a1 = a1 + 0\n  1365: a0 = 0x1\n  1368: a2 = 0\n  1370: ecalli 5 // 'seal_return'\n  1372: jump @46\n      : @41 (gas: 6)\n  1375: a1 = 0x20030\n  1380: i32 a1 = a1 + 0\n  1382: a0 = 0x1\n  1385: a2 = 0\n  1387: ecalli 5 // 'seal_return'\n  1389: jump @46\n      : @42 (gas: 6)\n  1392: a1 = 0x20030\n  1397: i32 a1 = a1 + 0\n  1399: a0 = 0x1\n  1402: a2 = 0\n  1404: ecalli 5 // 'seal_return'\n  1406: jump @46\n      : @43 (gas: 12)\n  1409: a0 = u64 [s1 + 0x18]\n  1412: u64 [s1 + 0xa0] = a0\n  1416: a0 = u64 [s1 + 0x20]\n  1419: u64 [s1 + 0xa8] = a0\n  1423: a0 = u64 [s1 + 0x28]\n  1426: u64 [s1 + 0xb0] = a0\n  1430: a1 = s1 + 0xa0\n  1434: a0 = u64 [s1 + 0x30]\n  1437: u64 [s1 + 0xb8] = a0\n  1441: a0 = a3\n  1443: u64 [s1 + 0x38] = a3\n  1446: ra = 24, jump @3\n      : @44 [@dyn 12] (gas: 29)\n  1451: a0 = u64 [0x20000]\n  1456: a1 = u64 [0x20008]\n  1461: u64 [s1 + 0x98] = a0\n  1465: a0 = u64 [0x20010]\n  1470: u64 [s1 + 0x90] = a1\n  1474: a3 = u64 [0x20018]\n  1479: u64 [s1 + 0x88] = a0\n  1483: a1 = 0x20\n  1486: a2 = s1 + 0x80\n  1490: u64 [s1 + 0x80] = a3\n  1494: a0 = u64 [s1 + 0x38]\n  1497: ra = 0x1a\n  1500: sp = sp + 0xffffffffffffffa0\n  1503: u64 [sp + 0x58] = ra\n  1506: u64 [sp + 0x50] = s0\n  1509: u64 [sp + 0x48] = s1\n  1512: s0 = sp + 0x60\n  1515: sp = sp & 0xffffffffffffffe0\n  1518: a3 = u64 [a2]\n  1520: u64 [sp + 0x18] = a3\n  1523: a3 = u64 [a2 + 0x8]\n  1526: u64 [sp + 0x10] = a3\n  1529: a3 = u64 [a2 + 0x10]\n  1532: u64 [sp + 0x8] = a3\n  1535: a2 = u64 [a2 + 0x18]\n  1538: u64 [sp] = a2\n  1540: s1 = a1\n  1542: ra = 0x6\n  1545: jump @6\n      : @45 [@dyn 13] (gas: 6)\n  1548: a1 = 0x20030\n  1553: i32 a1 = a1 + 0\n  1555: a0 = 0\n  1557: a2 = 0\n  1559: ecalli 5 // 'seal_return'\n  1561: fallthrough\n      : @46 (gas: 3)\n  1562: a0 = u64 [s1 + 0x38]\n  1565: a0 = i32 [a0]\n  1567: jump @48 if a0 >u 3\n      : @47 (gas: 6)\n  1571: a1 = 0x20030\n  1576: i32 a1 = a1 + 0\n  1578: a0 = 0x1\n  1581: a2 = 0\n  1583: ecalli 5 // 'seal_return'\n  1585: jump @46\n      : @48 (gas: 55)\n  1587: u64 [s1 + 344] = 0\n  1591: u64 [s1 + 336] = 0\n  1595: u64 [s1 + 328] = 0\n  1599: u64 [s1 + 320] = 0\n  1603: a0 = s1 + 0x60\n  1606: a1 = s1 + 0x140\n  1610: ra = 0x1c\n  1613: sp = sp + 0xffffffffffffffa0\n  1616: u64 [sp + 0x58] = ra\n  1619: u64 [sp + 0x50] = s0\n  1622: u64 [sp + 0x48] = s1\n  1625: s0 = sp + 0x60\n  1628: sp = sp & 0xffffffffffffffe0\n  1631: s1 = a0\n  1633: a0 = u64 [a1 + 0x18]\n  1636: a2 = u64 [a1 + 0x10]\n  1639: a3 = u64 [a1 + 0x8]\n  1642: a1 = u64 [a1]\n  1644: a0 = reverse a0\n  1646: a2 = reverse a2\n  1648: a3 = reverse a3\n  1650: a1 = reverse a1\n  1652: u64 [sp + 0x18] = a1\n  1655: u64 [sp + 0x10] = a3\n  1658: u64 [sp + 0x8] = a2\n  1661: u64 [sp] = a0\n  1663: u64 [sp + 56] = 0\n  1666: u64 [sp + 48] = 0\n  1669: u64 [sp + 40] = 0\n  1672: u64 [sp + 32] = 0\n  1675: u32 [sp + 64] = 0x20\n  1679: i32 a1 = sp + 0\n  1681: i32 a3 = sp + 0x20\n  1684: i32 a4 = sp + 0x40\n  1687: a2 = 0xffffffffffffffff\n  1690: a0 = 0\n  1692: ecalli 4 // 'get_storage'\n  1694: a0 = u64 [sp + 0x38]\n  1697: a1 = u64 [sp + 0x30]\n  1700: a2 = u64 [sp + 0x28]\n  1703: a3 = u64 [sp + 0x20]\n  1706: a0 = reverse a0\n  1708: a1 = reverse a1\n  1710: a2 = reverse a2\n  1712: a3 = reverse a3\n  1714: u64 [s1 + 0x18] = a3\n  1717: u64 [s1 + 0x10] = a2\n  1720: u64 [s1 + 0x8] = a1\n  1723: u64 [s1] = a0\n  1725: sp = s0 + 0xffffffffffffffa0\n  1728: ra = u64 [sp + 0x58]\n  1731: s0 = u64 [sp + 0x50]\n  1734: s1 = u64 [sp + 0x48]\n  1737: sp = sp + 0x60\n  1740: ret\n      : @49 [@dyn 14] (gas: 11)\n  1742: a2 = u64 [s1 + 0x60]\n  1745: a0 = u64 [s1 + 0x68]\n  1748: a1 = u64 [s1 + 0x70]\n  1751: a3 = u64 [s1 + 0x78]\n  1754: u64 [s1 + 0x58] = a3\n  1757: u64 [s1 + 0x50] = a1\n  1760: u64 [s1 + 0x48] = a0\n  1763: a0 = 0x80\n  1767: a1 = s1 + 0x40\n  1770: u64 [s1 + 0x40] = a2\n  1773: ra = 30, jump @3\n      : @50 [@dyn 15] (gas: 2)\n  1778: a1 = i32 [0x20024]\n  1783: jump @52 if a1 >u 159\n      : @51 (gas: 2)\n  1788: u32 [0x20024] = 0xa0\n  1795: fallthrough\n      : @52 (gas: 8)\n  1796: a0 = 0x20030\n  1801: i32 a1 = a0 + 0x80\n  1805: a2 = 0x20\n  1808: a0 = 0\n  1810: ecalli 5 // 'seal_return'\n  1812: a0 = 0\n  1814: ra = 0x20\n  1817: jump @12\n      : @53 [export #0: 'call'] (gas: 2)\n  1820: a0 = 0\n  1822: ra = 32, jump @12\n      : @54 [@dyn 16] [export #1: 'deploy'] (gas: 2)\n  1827: a0 = 0x1\n  1830: ra = 34, jump @12\n      : @55 [@dyn 17] (gas: 16)\n  1835: a4 = u64 [a3]\n  1837: u64 [sp + 0x18] = a4\n  1840: a4 = u64 [a3 + 0x8]\n  1843: u64 [sp + 0x20] = a4\n  1846: a4 = u64 [a3 + 0x10]\n  1849: u64 [sp + 0x28] = a4\n  1852: a3 = u64 [a3 + 0x18]\n  1855: u64 [sp + 0x30] = a3\n  1858: s1 = u64 [a2]\n  1860: a3 = u64 [a2 + 0x8]\n  1863: u64 [sp] = a3\n  1865: a3 = u64 [a2 + 0x10]\n  1868: u64 [sp + 0x8] = a3\n  1871: a2 = u64 [a2 + 0x18]\n  1874: u64 [sp + 0x10] = a2\n  1877: jump [t0]\n","bytecode":{"object":"50564d00005a09000000000000010700c15000c0008003204b5c3c9dd11fd82fc8af1d453fd16d395f9cc494301bacbce3f0236345680ea90480a009000000000e0000001c0000002a00000037000000420000004d0000005f0000006a00000063616c6c5f646174615f636f707963616c6c5f646174615f6c6f616463616c6c5f646174615f73697a656465706f7369745f6576656e746765745f73746f726167657365616c5f72657475726e7365745f696d6d757461626c655f646174617365745f73746f7261676576616c75655f7472616e73666572726564051102871c0463616c6c8723066465706c6f790688681102875715005d012b02b602bb02e1024b0357038e03b704d804ab050c06ce06f20623072b07390828000251083b03330750000383770a06282e037c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b57821008821595111032009511d87b10207b15187b161082897b19088289087b198285108286183308205010040f016f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a989908787909988938787907988930787906988928787905988920787904988918787903988910787902988808787801821020821518821610951128320082186f888219086f99821a106faa821b186fbb7b1b387b1a307b19287b18208379836a8317203308010a039551a082105882155082164895116032008b7910520931c8780883881f8488e05638000001253309240002390a240002ae8a093d082400020133083000028377c887073200009511f07b10087b158475010a02013d072000025105075010080950100aa1009511a07b10587b15509515608411e049111849111049018000330740641849110850100c5dfe4911384911304911284911208317200a0801821730821838821928821a20d49808d4a707d487075107163308300002838833070133093300100a05283b390824000256187f0c2003240002800001330730000283778000330833090a28c3fc33078000330850100e21ff8378330733093300100a0501951120fe7b10d8017b15d0017b16c8019515e0018411e064164926f8004926f0004926e00080003307409568e0004926e800501012b0fd33072000027b67383907200002531704b3018367000133080a010181671c0152471d365760550149267801492670014926680149266001836760010a0801956b000182b77082b87882b96882ba60d49808d4a707d4870752077a01826738817754172382019517e08477e07b67386471836780013308040a01956b000182b7980082b8900082b9880082ba80007b6730826b387bb7187b68287bb8107b69207bb9087b6a187bba64b84926b8014926b0014926a8014926a0019567a0013300149511a07b10587b15509515608411e08272827a08827b108277188283828908828c108288186f746fbb6faa6f276f826fcc6f996f387b17187b1a107b1b087b147b18387b19307b1c287b12208318831a203309ff330b2033070a079551a082105882155095116032009567c0003308403300169511f07b10087b156489647533082064973300022892fd8267d8008268d0008269c800826ac000d49707d48a09d47909989920d48707977720d4970751078400005247c1ce642e4c49263801492630014926280149262001836720010a0801956b000182b73082b83882b92882ba20d49808d4a707d487075107e1003308300002838833070133090a0528cf003308300002838833070133090a0528be003308300002838833070133090a0528ad003308300002838833070133090a05289c008267187b67a0008267207b67a8008267287b67b0009568a0008267307b67b80064a77b6a3850101893fb3a070000023a080800027b6798003a071000027b6890003a0a1800027b678800330820956980007b6a800082673833001a9511a07b10587b15507b16489515608411e0829a7b1a18829a087b1a10829a107b1a088299187b196486330006285efc33083000028388330733090a05018267388177561703143308300002838833070133090a0528e9492658014926500149264801492640019567609568400133001c9511a07b10587b15507b16489515608411e06476828718828910828a0882886f776f996faa6f887b18187b1a107b19087b17491138491130491128491120481140208318831a20831b403309ff33070a04821738821830821928821a206f776f886f996faa7b6a187b69107b68087b679551a08210588215508216489511603200826960826768826870826a787b6a587b68507b6748330780009568407b694050101e4cfa390824000256289f000d2003240002a0000133073000028378800033092033070a0533073300202883fb33075010207efb33070150102276fb82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b1910320221422525499224499224499224499224499224499224499224499224499224499224495295a49492a4a424a12a252949922449922449922449922449922449922449922449aa945292545292a424491042c2509a948644489224911292244d922409a55488c0103551a8d288884811412242480851232022221a499224524852a48888489224a988884892a42425a9aa4a529294a492a448922a251111499224062222a291244922944a2895502aa154128944244a08214284484492244949925412aaa608a58a8848244992925495a424899254925425294952922489248410182255524828499294922400"},"deployedBytecode":{"object":"50564d00005a09000000000000010700c15000c0008003204b5c3c9dd11fd82fc8af1d453fd16d395f9cc494301bacbce3f0236345680ea90480a009000000000e0000001c0000002a00000037000000420000004d0000005f0000006a00000063616c6c5f646174615f636f707963616c6c5f646174615f6c6f616463616c6c5f646174615f73697a656465706f7369745f6576656e746765745f73746f726167657365616c5f72657475726e7365745f696d6d757461626c655f646174617365745f73746f7261676576616c75655f7472616e73666572726564051102871c0463616c6c8723066465706c6f790688681102875715005d012b02b602bb02e1024b0357038e03b704d804ab050c06ce06f20623072b07390828000251083b03330750000383770a06282e037c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b57821008821595111032009511d87b10207b15187b161082897b19088289087b198285108286183308205010040f016f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a989908787909988938787907988930787906988928787905988920787904988918787903988910787902988808787801821020821518821610951128320082186f888219086f99821a106faa821b186fbb7b1b387b1a307b19287b18208379836a8317203308010a039551a082105882155082164895116032008b7910520931c8780883881f8488e05638000001253309240002390a240002ae8a093d082400020133083000028377c887073200009511f07b10087b158475010a02013d072000025105075010080950100aa1009511a07b10587b15509515608411e049111849111049018000330740641849110850100c5dfe4911384911304911284911208317200a0801821730821838821928821a20d49808d4a707d487075107163308300002838833070133093300100a05283b390824000256187f0c2003240002800001330730000283778000330833090a28c3fc33078000330850100e21ff8378330733093300100a0501951120fe7b10d8017b15d0017b16c8019515e0018411e064164926f8004926f0004926e00080003307409568e0004926e800501012b0fd33072000027b67383907200002531704b3018367000133080a010181671c0152471d365760550149267801492670014926680149266001836760010a0801956b000182b77082b87882b96882ba60d49808d4a707d4870752077a01826738817754172382019517e08477e07b67386471836780013308040a01956b000182b7980082b8900082b9880082ba80007b6730826b387bb7187b68287bb8107b69207bb9087b6a187bba64b84926b8014926b0014926a8014926a0019567a0013300149511a07b10587b15509515608411e08272827a08827b108277188283828908828c108288186f746fbb6faa6f276f826fcc6f996f387b17187b1a107b1b087b147b18387b19307b1c287b12208318831a203309ff330b2033070a079551a082105882155095116032009567c0003308403300169511f07b10087b156489647533082064973300022892fd8267d8008268d0008269c800826ac000d49707d48a09d47909989920d48707977720d4970751078400005247c1ce642e4c49263801492630014926280149262001836720010a0801956b000182b73082b83882b92882ba20d49808d4a707d487075107e1003308300002838833070133090a0528cf003308300002838833070133090a0528be003308300002838833070133090a0528ad003308300002838833070133090a05289c008267187b67a0008267207b67a8008267287b67b0009568a0008267307b67b80064a77b6a3850101893fb3a070000023a080800027b6798003a071000027b6890003a0a1800027b678800330820956980007b6a800082673833001a9511a07b10587b15507b16489515608411e0829a7b1a18829a087b1a10829a107b1a088299187b196486330006285efc33083000028388330733090a05018267388177561703143308300002838833070133090a0528e9492658014926500149264801492640019567609568400133001c9511a07b10587b15507b16489515608411e06476828718828910828a0882886f776f996faa6f887b18187b1a107b19087b17491138491130491128491120481140208318831a20831b403309ff33070a04821738821830821928821a206f776f886f996faa7b6a187b69107b68087b679551a08210588215508216489511603200826960826768826870826a787b6a587b68507b6748330780009568407b694050101e4cfa390824000256289f000d2003240002a0000133073000028378800033092033070a0533073300202883fb33075010207efb33070150102276fb82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b1910320221422525499224499224499224499224499224499224499224499224499224499224495295a49492a4a424a12a252949922449922449922449922449922449922449922449aa945292545292a424491042c2509a948644489224911292244d922409a55488c0103551a8d288884811412242480851232022221a499224524852a48888489224a988884892a42425a9aa4a529294a492a448922a251111499224062222a291244922944a2895502aa154128944244a08214284484492244949925412aaa608a58a8848244992925495a424899254925425294952922489248410182255524828499294922400"},"methodIdentifiers":{"retrieve()":"2e64cec1","store(uint256)":"6057361d"}},"irOptimized":"/// @use-src 0:\"contracts/Storage.sol\"\nobject \"Storage_30\" {\n    code {\n        {\n            /// @src 0:58:531  \"contract Storage {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Storage_30_deployed\")\n            codecopy(_1, dataoffset(\"Storage_30_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"contracts/Storage.sol\"\n    object \"Storage_30_deployed\" {\n        code {\n            {\n                /// @src 0:58:531  \"contract Storage {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x2e64cec1 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        mstore(_1, sload(0))\n                        return(_1, 32)\n                    }\n                    case 0x6057361d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        sstore(0, value)\n                        /// @src 0:366:390  \"NumberChanged(newNumber)\"\n                        let _2 := /** @src 0:58:531  \"contract Storage {...\" */ mload(64)\n                        mstore(_2, value)\n                        /// @src 0:366:390  \"NumberChanged(newNumber)\"\n                        log1(_2, /** @src 0:58:531  \"contract Storage {...\" */ 32, /** @src 0:366:390  \"NumberChanged(newNumber)\" */ 0x2fd81fd19d3c5c4b396dd13f451dafc8bcac1b3094c49c5fa90e68456323f0e3)\n                        /// @src 0:58:531  \"contract Storage {...\"\n                        return(0, 0)\n                    }\n                }\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122039c227a2a7a034307500b3b28e0f6ad37788cb2de1f0ad5ed2a2299a388772f964736f6c634300081c0033\"\n    }\n}\n","hash":"3839204ae665e7b62e178ef9130c495dd109f95c02229c37b03cbebf2a91e4a5","factoryDependencies":{}}}}}}